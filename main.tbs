include "global.tbh"

sub on_sys_init()

	dhcp_start(PL_SOCK_INTERFACE_NET,"","")
	dns_start(sock_get("DNS"))

end sub

sub on_button_pressed()

	http_request(HTTP_POST, "http://httpbin.org/post", PL_SOCK_INTERFACE_NET,"data="+http_encode_url("sample 1"),"application/x-www-form-urlencoded")

end sub

sub on_sock_data_arrival()

	dhcp_proc_data()
	dns_proc_data()
	http_proc_data()
		
end sub

sub on_sock_event(newstate as enum pl_sock_state, newstatesimple as enum pl_sock_state_simple)
	
	http_sock_state_update(newstatesimple)
		
 end sub

sub callback_http_send_post_data(remaining_content_length as dword)

	dim s as string = "data="+http_encode_url("data 1/.")
	dim b as byte = http_send_post_data(s)

end sub

sub callback_http_reponse_code_arrival(http_response as string)
end sub 

sub callback_http_header_arrival(header_type as string, header_value as string)
end sub

sub callback_http_headers_complete()
end sub

sub callback_http_content_arrival(data as string)
end sub

sub on_sock_data_sent()

	http_on_sock_data_sent()

end sub

sub callback_http_post_data_sent_ok()
	
	sys.debugprint("\r\nData sent ok\r\n")
	
end sub

sub callback_dns_answer_acquired(return_type as en_dns_return_type, byref return_string as string)
	
	http_dns_answer_acquired(return_type, return_string)

end sub

sub callback_dns_ok()

	http_dns_ok()

end sub

sub on_sys_timer()

	wln_proc_timer()
	dhcp_proc_timer()
	dns_proc_timer()
	
end sub

sub on_wln_task_complete(completed_task as pl_wln_tasks)

	wln_proc_task_complete(completed_task)
	
end sub

sub on_wln_event(wln_event as pl_wln_events)

	wln_proc_event(wln_event)
	
end sub

sub callback_wln_ok()

	dhcp_start(PL_SOCK_INTERFACE_WLN,"","")
		
end sub

sub callback_dhcp_ok(renew as no_yes, interface as pl_sock_interfaces, byref ip as string, byref gateway_ip as string, byref netmask as string, lease_time as dword)
	
	if interface=PL_SOCK_INTERFACE_NET then
		if renew=YES and net.ip<>ip then
			sys.reboot
		end if
		if net.ip<>ip then
			net.ip=ip
			net.gatewayip=gateway_ip
			net.netmask=netmask
		end if
	end if
	
	if interface=PL_SOCK_INTERFACE_WLN then
		if renew=YES and wln.ip<>ip then
			sys.reboot
		end if
		if wln.ip<>ip then
			wln.ip=ip
			wln.gatewayip=gateway_ip
			wln.netmask=netmask
		end if
	end if				
	
end sub

sub callback_dhcp_failure(interface as pl_sock_interfaces,failure_code as en_dhcp_status_codes)	
end sub

sub callback_wln_failure(wln_state as en_wln_status_codes)
end sub

sub callback_dns_failure(status as en_dns_status_codes)
end sub

sub callback_dns_pre_buffrq(num_of_pages_required as byte)
end sub

sub callback_dns_buff_released()
end sub

sub callback_wln_starting_association()
end sub

sub callback_wln_pre_buffrq(required_buff_pages as byte)
end sub

sub callback_wln_rescan_result(current_rssi as byte, scan_rssi as byte, different_ap as no_yes)
end sub

sub callback_wln_rescan_for_better_ap()
end sub

sub callback_dhcp_pre_clear_ip(interface as pl_sock_interfaces)
end sub

sub callback_dhcp_pre_buffrq(required_buff_pages as byte)
end sub

sub callback_dhcp_buff_released()
end sub